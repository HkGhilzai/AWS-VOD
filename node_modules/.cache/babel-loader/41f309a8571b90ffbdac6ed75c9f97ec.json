{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/SignedUrl/UnicornFlix/src/components/PopoverProgress/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\n\nclass PopoverProgress extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hideProgress = () => {\n      this.setState({\n        showing: false\n      });\n    };\n\n    this.progressInfo = () => {\n      const progress = this.props.progress;\n      let returnValue = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Error!\");\n\n      if (progress >= 100 || progress <= 0) {\n        returnValue = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Upload Complete!\");\n      } else if (progress > 0) {\n        returnValue = React.createElement(ProgressBar, {\n          now: progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return returnValue;\n    };\n\n    this.overlayProgress = () => {\n      const showing = this.state.showing;\n      return React.createElement(Modal, {\n        id: \"popup\",\n        style: {\n          maxWidth: 755\n        },\n        isOpen: showing,\n        toggle: this.hideProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.hideProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Upload Progress\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.progressInfo()));\n    };\n\n    this.state = {\n      showing: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const progress = props.progress;\n    const newState = state;\n\n    if (progress > 0 && progress < 100) {\n      newState.showing = true;\n    }\n\n    return newState;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.overlayProgress());\n  }\n\n}\n\nPopoverProgress.propTypes = {\n  progress: PropTypes.number.isRequired\n};\nexport default PopoverProgress;","map":{"version":3,"sources":["/home/ec2-user/SignedUrl/UnicornFlix/src/components/PopoverProgress/index.jsx"],"names":["React","Component","PropTypes","ProgressBar","Modal","ModalBody","ModalHeader","PopoverProgress","constructor","props","hideProgress","setState","showing","progressInfo","progress","returnValue","overlayProgress","state","maxWidth","getDerivedStateFromProps","newState","render","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,YAA9C;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,YAhBmB,GAgBJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KApBkB;;AAAA,SAsBnBC,YAtBmB,GAsBJ,MAAM;AAAA,YACXC,QADW,GACE,KAAKL,KADP,CACXK,QADW;AAEnB,UAAIC,WAAW,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;;AAKA,UAAID,QAAQ,IAAI,GAAZ,IAAmBA,QAAQ,IAAI,CAAnC,EAAsC;AACpCC,QAAAA,WAAW,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAKD,OAND,MAMO,IAAID,QAAQ,GAAG,CAAf,EAAkB;AACvBC,QAAAA,WAAW,GAAI,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AACD;;AACD,aAAOC,WAAP;AACD,KAvCkB;;AAAA,SAyCnBC,eAzCmB,GAyCD,MAAM;AAAA,YACdJ,OADc,GACF,KAAKK,KADH,CACdL,OADc;AAEtB,aACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,KAAK,EAAE;AAAEM,UAAAA,QAAQ,EAAE;AAAZ,SAAzB;AAA4C,QAAA,MAAM,EAAEN,OAApD;AAA6D,QAAA,MAAM,EAAE,KAAKF,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKA,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,YAAL,EADH,CAFF,CADF;AAQD,KAnDkB;;AAEjB,SAAKI,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAED,SAAOO,wBAAP,CAAgCV,KAAhC,EAAuCQ,KAAvC,EAA8C;AAAA,UACpCH,QADoC,GACvBL,KADuB,CACpCK,QADoC;AAE5C,UAAMM,QAAQ,GAAGH,KAAjB;;AACA,QAAIH,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,GAA/B,EAAoC;AAClCM,MAAAA,QAAQ,CAACR,OAAT,GAAmB,IAAnB;AACD;;AACD,WAAOQ,QAAP;AACD;;AAuCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,eAAL,EADH,CADF;AAKD;;AA5DqC;;AA+DxCT,eAAe,CAACe,SAAhB,GAA4B;AAC1BR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,MAAV,CAAiBC;AADD,CAA5B;AAIA,eAAejB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\n\nclass PopoverProgress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showing: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { progress } = props;\n    const newState = state;\n    if (progress > 0 && progress < 100) {\n      newState.showing = true;\n    }\n    return newState;\n  }\n\n  hideProgress = () => {\n    this.setState({\n      showing: false,\n    });\n  }\n\n  progressInfo = () => {\n    const { progress } = this.props;\n    let returnValue = (\n      <div>\n        Error!\n      </div>\n    );\n    if (progress >= 100 || progress <= 0) {\n      returnValue = (\n        <div>\n          Upload Complete!\n        </div>\n      );\n    } else if (progress > 0) {\n      returnValue = (<ProgressBar now={progress} />);\n    }\n    return returnValue;\n  }\n\n  overlayProgress = () => {\n    const { showing } = this.state;\n    return (\n      <Modal id=\"popup\" style={{ maxWidth: 755 }} isOpen={showing} toggle={this.hideProgress}>\n        <ModalHeader toggle={this.hideProgress}>Upload Progress</ModalHeader>\n        <ModalBody>\n          {this.progressInfo()}\n        </ModalBody>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.overlayProgress()}\n      </div>\n    );\n  }\n}\n\nPopoverProgress.propTypes = {\n  progress: PropTypes.number.isRequired,\n};\n\nexport default PopoverProgress;\n"]},"metadata":{},"sourceType":"module"}