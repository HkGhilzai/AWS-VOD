{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/SignedUrl/UnicornFlix/src/components/GridView/index.jsx\";\n\n/* eslint-disable import/order */\nimport React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-styled-flexboxgrid';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport './index.css';\nimport VideoPlayer from '../VideoPlayer';\nimport GridCardView from '../GridCardView';\nimport 'video.js/dist/video-js.css'; // Insert Location 9\n\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from '../../graphql/queries'; // Insert Location 12\n\nimport awsvideo from '../../aws-video-exports'; // Insert Location 14\n\nimport { onCreateVodAsset } from '../../graphql/subscriptions';\n\nclass GridView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hideMovie = () => {\n      this.setState({\n        displayingMovie: false\n      });\n    };\n\n    this.displayMovie = item => {\n      // Insert Location 13\n      const region = Amplify._config.aws_project_region;\n      this.setState({\n        sources: [{\n          src: `https://${awsvideo.awsOutputVideo}/${item.video.id}.m3u8`,\n          type: 'application/x-mpegURL'\n        }],\n        displayingMovie: true,\n        choosenItem: item,\n        token: item.video.token\n      });\n    };\n\n    this.overlayMovie = () => {\n      const _this$state = this.state,\n            displayingMovie = _this$state.displayingMovie,\n            sources = _this$state.sources,\n            _this$state$choosenIt = _this$state.choosenItem,\n            title = _this$state$choosenIt.title,\n            description = _this$state$choosenIt.description,\n            token = _this$state.token;\n      return React.createElement(Modal, {\n        id: \"popup\",\n        style: {\n          maxWidth: 755\n        },\n        isOpen: displayingMovie,\n        toggle: this.hideMovie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.hideMovie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, title), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, description, React.createElement(VideoPlayer, {\n        controls: true,\n        sources: sources,\n        width: 720,\n        height: 420,\n        bigPlayButton: false,\n        autoplay: true,\n        token: token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    };\n\n    this.listenForNewAssets = () => {\n      // Insert Location 15\n      API.graphql(graphqlOperation(onCreateVodAsset)).subscribe({\n        next: data => {\n          const items = this.state.items;\n          items.push(data.value.data.onCreateVodAsset);\n          this.setState({\n            items\n          });\n        }\n      });\n    };\n\n    this.state = {\n      displayingMovie: false,\n      choosenItem: {},\n      nextToken: '',\n      sources: [],\n      items: []\n    };\n    this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n  }\n\n  async componentDidMount() {\n    // Insert Location 10\n    const assets = await API.graphql(graphqlOperation(queries.listVodAssets));\n    let nextToken = assets.data.listVodAssets.nextToken;\n\n    if (nextToken === undefined) {\n      nextToken = '';\n    }\n\n    this.setState({\n      items: assets.data.listVodAssets.items,\n      nextToken\n    }); // Insert Location 16\n\n    this.listenForNewAssets();\n  }\n\n  async handleOnDocumentBottom() {\n    // Insert Location 11\n    const _this$state2 = this.state,\n          nextToken = _this$state2.nextToken,\n          items = _this$state2.items;\n\n    if (nextToken !== '' && nextToken !== null && nextToken !== undefined) {\n      console.log(nextToken);\n      const assets = await API.graphql(graphqlOperation(queries.listVodAssets, {\n        nextToken\n      }));\n      const newItems = items.concat(assets.data.listVodAssets.items);\n      let newNextToken = assets.data.listVodAssets.nextToken;\n\n      if (newNextToken === undefined) {\n        newNextToken = '';\n      }\n\n      this.setState({\n        items: newItems,\n        nextToken: newNextToken\n      });\n    }\n  }\n\n  render() {\n    const items = this.state.items;\n    const itemHTML = items.map(item => React.createElement(Col, {\n      xs: 6,\n      sm: 4,\n      lg: 3.5,\n      style: {\n        paddingTop: 15,\n        paddingBottom: 15\n      },\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.displayMovie(item, e),\n      \"aria-label\": item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(GridCardView, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      style: {\n        paddingTop: 85\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.overlayMovie(), React.createElement(BottomScrollListener, {\n      onBottom: this.handleOnDocumentBottom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, itemHTML)));\n  }\n\n}\n\nexport default GridView;","map":{"version":3,"sources":["/home/ec2-user/SignedUrl/UnicornFlix/src/components/GridView/index.jsx"],"names":["React","Component","Grid","Col","Row","Modal","ModalBody","ModalHeader","BottomScrollListener","VideoPlayer","GridCardView","Amplify","API","graphqlOperation","queries","awsvideo","onCreateVodAsset","GridView","constructor","props","hideMovie","setState","displayingMovie","displayMovie","item","region","_config","aws_project_region","sources","src","awsOutputVideo","video","id","type","choosenItem","token","overlayMovie","state","title","description","maxWidth","listenForNewAssets","graphql","subscribe","next","data","items","push","value","nextToken","handleOnDocumentBottom","bind","componentDidMount","assets","listVodAssets","undefined","console","log","newItems","concat","newNextToken","render","itemHTML","map","paddingTop","paddingBottom","e"],"mappings":"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","sourcesContent":["/* eslint-disable import/order */\nimport React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-styled-flexboxgrid';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport './index.css';\nimport VideoPlayer from '../VideoPlayer';\nimport GridCardView from '../GridCardView';\nimport 'video.js/dist/video-js.css';\n\n\n// Insert Location 9\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from '../../graphql/queries';\n\n\n// Insert Location 12\nimport awsvideo from '../../aws-video-exports';\n\n\n// Insert Location 14\nimport { onCreateVodAsset } from '../../graphql/subscriptions';\n\n\nclass GridView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayingMovie: false,\n      choosenItem: {},\n      nextToken: '',\n      sources: [],\n      items: [],\n    };\n\n    this.handleOnDocumentBottom = this.handleOnDocumentBottom.bind(this);\n  }\n\n  async componentDidMount() {\n    // Insert Location 10\nconst assets = await API.graphql(graphqlOperation(queries.listVodAssets));\nlet { nextToken } = assets.data.listVodAssets;\nif (nextToken === undefined) {\n  nextToken = '';\n}\nthis.setState({ items: assets.data.listVodAssets.items, nextToken });\n    \n    // Insert Location 16\nthis.listenForNewAssets();\n  }\n\n  hideMovie = () => {\n    this.setState({\n      displayingMovie: false,\n    });\n  }\n\n  displayMovie = (item) => {\n    // Insert Location 13\n   const region = Amplify._config.aws_project_region;\nthis.setState({\n  sources: [{\n      src: `https://${awsvideo.awsOutputVideo}/${item.video.id}.m3u8`,\n      type: 'application/x-mpegURL',\n    }],\n  displayingMovie: true,\n  choosenItem: item,\n  token: item.video.token,\n}); \n  }\n\noverlayMovie = () => {\n    const { displayingMovie, sources, choosenItem: { title, description }, token } = this.state;\n    return (\n      <Modal id=\"popup\" style={{ maxWidth: 755 }} isOpen={displayingMovie} toggle={this.hideMovie}>\n        <ModalHeader toggle={this.hideMovie}>{title}</ModalHeader>\n        <ModalBody>\n          {description}\n          <VideoPlayer\n            controls\n            sources={sources}\n            width={720}\n            height={420}\n            bigPlayButton={false}\n            autoplay\n            token={token}\n          />\n        </ModalBody>\n      </Modal>\n    );\n  }\n\n\n  listenForNewAssets = () => {\n    // Insert Location 15\nAPI.graphql(\n  graphqlOperation(onCreateVodAsset),\n).subscribe({\n  next: (((data) => {\n    const { items } = this.state;\n    items.push(data.value.data.onCreateVodAsset);\n    this.setState({\n      items,\n    });\n  })),\n});\n  }\n\n  async handleOnDocumentBottom() {\n    // Insert Location 11\nconst { nextToken, items } = this.state;\nif (nextToken !== '' && nextToken !== null && nextToken !== undefined) {\n  console.log(nextToken);\n  const assets = await API.graphql(graphqlOperation(queries.listVodAssets, { nextToken }));\n  const newItems = items.concat(assets.data.listVodAssets.items);\n  let newNextToken = assets.data.listVodAssets.nextToken;\n  if (newNextToken === undefined) {\n    newNextToken = '';\n  }\n  this.setState({ items: newItems, nextToken: newNextToken });\n}\n    \n  }\n\n  render() {\n    const { items } = this.state;\n    const itemHTML = items.map((item) => (\n      <Col xs={6} sm={4} lg={3.5} style={{ paddingTop: 15, paddingBottom: 15 }} key={item.id}>\n        <button type=\"button\" onClick={(e) => this.displayMovie(item, e)} aria-label={item.title}><GridCardView item={item} /></button>\n      </Col>\n    ));\n\n    return (\n      <div style={{ paddingTop: 85 }}>\n        {this.overlayMovie()}\n        <BottomScrollListener onBottom={this.handleOnDocumentBottom} />\n        <Grid fluid>\n          <Row>\n            {itemHTML}\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default GridView;\n"]},"metadata":{},"sourceType":"module"}